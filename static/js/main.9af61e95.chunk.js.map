{"version":3,"sources":["components/landingpage.js","components/contact.js","components/projects.js","components/education.js","components/experience.js","components/skills.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","style","width","margin","className","col","src","alt","href","rel","target","class","aria-hidden","Component","Contact","phone","tablet","Projects","props","state","activeTab","this","shadow","minWidth","color","height","background","border","name","opacity","onChange","tabId","setState","ripple","toggleCategories","Education","endYear","marginBottom","startYear","marginTop","schoolName","schoolDescription","grade","Experience","companyName","jobTitle","jobDescription","achievement1","achievement2","achievement3","achievement4","achievement5","Skills","display","skill","marginLeft","progress","Resume","textAlign","borderRadius","paddingTop","borderTop","paddingLeft","Main","exact","path","component","LandingPage","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9af61e95.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Landing extends Component {\n  render() {\n    return(\n      <div style={{width: '100%', margin: 'auto'}}>\n        <Grid className=\"landing-grid\">\n        <Cell col={12}>\n          <img\n          src=\"https://cdn0.iconfinder.com/data/icons/user-pictures/100/supportmale-2-512.png\"\n          alt=\"avatar\"\n          className=\"avatar-img\"\n          />\n\n          <div className=\"banner-text\">\n            <h1>Full Stack Web Developer</h1>\n            <hr/>\n            <p>Rails | React | HTML/CSS | Bootstrap | JavaScript | ES6 | SQL | Ruby | NodeJS</p>\n            <div className=\"social-links\">\n              {/* GitHub */}\n              <a href=\"https://github.com/tomhill991\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <i class=\"fa fa-github\" aria-hidden=\"true\"/>\n              </a>\n\n              {/* LinkedIn */}\n              <a href=\"https://www.linkedin.com/in/tomhill991\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <i class=\"fa fa-linkedin\" aria-hidden=\"true\"/>\n              </a>\n\n              {/* Freecode Camp */}\n              <a href=\"https://www.freecodecamp.org/thill991\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <i class=\"fa fa-free-code-camp\" aria-hidden=\"true\"/>\n              </a>\n\n               {/* Stack Overflow */}\n              <a href=\"https://stackexchange.com/users/17397207/hillybob991\" rel=\"noopener noreferrer\" target=\"_blank\">\n                <i class=\"fa fa-stack-overflow\" aria-hidden=\"true\"/>\n              </a>\n\n            </div>\n          </div>\n        </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { Grid, Cell, List, ListItemContent, ListItem} from 'react-mdl';\n\nclass Contact extends Component {\n  render() {\n    return(\n      <div className=\"contact-body\">\n        <Grid className=\"contact-grid\">\n         {/* half page in one cell*/}\n          <Cell col={6} phone={12} tablet={12}>\n        {/* my bio */}\n          <h2>Tom Hill</h2>\n          <img\n            src=\"https://cdn0.iconfinder.com/data/icons/user-pictures/100/supportmale-2-512.png\"\n            alt=\"avatar\"\n            className=\"contact-avatar\"\n          />\n          <p className=\"contact-text\">\n          I recently completed the Le Wagon fullstack 9-week coding bootcamp. I learnt HTML, CSS, Bootstrap, JavaScript ES2015, SQL, git, GitHub, Heroku and Ruby on Rails. Designed, implemented and shipped to production a clone of AirBnB and a Rails prototype of a WeChat mini-program called Rent a Jedi. My GitHub profile is <a href=\"https://github.com/tomhill991\">here</a>\n          </p>\n          </Cell>\n          {/* half page in one cell*/}\n          <Cell col={6} phone={12} tablet={12}>\n          <h2>Contact Me</h2>\n          <hr/>\n          {/* contact list with number etc.*/}\n          <div className=\"contact-list\">\n            <List>\n              <ListItem className=\"contact-list-item\">\n                <ListItemContent className=\"contact-list-content\">\n                <i className=\"fa fa-phone-square\" aria-hidden=\"true\"/>+86 1861 4045076\n                </ListItemContent>\n              </ListItem>\n\n              <ListItem className=\"contact-list-item\">\n                <ListItemContent className=\"contact-list-content\">\n                <i className=\"fa fa-envelope\" aria-hidden=\"true\"/>tom.hill991@gmail.com\n                </ListItemContent>\n              </ListItem>\n\n              <ListItem className=\"contact-list-item\">\n                <ListItemContent className=\"contact-list-content\">\n                <i className=\"fa fa-skype\" aria-hidden=\"true\"/>thomas.hill27\n                </ListItemContent>\n              </ListItem>\n\n            </List>\n          </div>\n\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport { Tabs, Tab, Grid, Cell, Card, CardTitle, CardActions, CardMenu, IconButton, CardText } from 'react-mdl';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { activeTab: 0 };\n  }\n\n   toggleCategories() {\n    // tab 0, 1, 2 points to the indexes\n    if(this.state.activeTab === 0) {\n      return(\n        // React projects\n        <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n          <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://hackernoon.com/hn-images/1*h8d-4wYLN9wwiEsLAA_5yg.jpeg) center / cover'}}>Hacker News Clone</CardTitle>\n          <CardText>\n          The frontend has an upvote and downvote functionality and the ability for a user to submit a 'lightning talk'. To create this, I learned React on my own whilst on the Bootcamp (which didn’t cover React). I also created an API using Rails that stores articles on a backend and is called from the frontend.\n          </CardText>\n          <CardActions style={{height: '50px'}}border>\n            <a class=\"projects-button\" href=\"https://github.com/tomhill991/test-fullstack\" rel=\"noopener noreferrer\" target=\"_blank\">\n              Front-End\n            </a>\n            <a class=\"projects-button\" href=\"https://github.com/tomhill991/lightning-talk-backend\" rel=\"noopener noreferrer\" target=\"_blank\">\n              Back-End\n            </a>\n          </CardActions>\n          <CardMenu style={{color: '#fff'}}>\n            <IconButton name=\"share\" />\n          </CardMenu>\n        </Card>\n      )\n    } else if (this.state.activeTab === 1) {\n      return(\n        // Rails projects\n        <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n          <CardTitle style={{color: 'black', height: '200px', background: 'url(https://cdn0.iconfinder.com/data/icons/long-shadow-web-icons/512/ruby-rails-512.png) center / cover'}}>Algarve Property Company</CardTitle>\n          <CardText>\n          Creating a website using Rails, ES6, Sass & HTML to display properties from a backend with a form to generate leads.\n          </CardText>\n          <CardActions style={{height: '50px'}}border>\n            <a class=\"projects-button\" href=\"https://github.com/tomhill991/algarve-property-company\" rel=\"noopener noreferrer\" target=\"_blank\">\n              Rails Code\n            </a>\n          </CardActions>\n          <CardMenu style={{color: '#fff'}}>\n            <IconButton name=\"share\" />\n          </CardMenu>\n        </Card>\n      )\n    } else if (this.state.activeTab === 2) {\n      return(\n        // WeChat mini-program projects\n        <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n          <CardTitle style={{color: 'black', height: '176px', background: 'url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ4lkJB8WynSnV_1UduXHylbBspW5DS0B-tWklTrT3lw5LPkO62&s) center / cover', opacity: '0.7'}}>Plantopia</CardTitle>\n          <CardText>\n          Plantopia is a WeChat mini-program. Its main functionality is to scan any plant and retrieve information on it (such as watering schedule, soil preferences etc.) through an API so users can better maintain their plant. Another function is that the plant sends reminders to the user on watering frequency and a conversation happens between the plant and the user in a chatroom. I conceptualised the chatroom functionality and created it. I also created the API for the users own plants using Rails.\n\n          </CardText>\n          <CardActions style={{height: '50px'}}border>\n            <a class=\"projects-button\" href=\"https://github.com/kaki-xue/plantopia-frontend\" rel=\"noopener noreferrer\" target=\"_blank\">\n              Front-End\n            </a>\n            <a class=\"projects-button\" href=\"https://github.com/tomhill991/lightning-talk-backend\" rel=\"noopener noreferrer\" target=\"_blank\">\n              Back-End\n            </a>\n          </CardActions>\n          <CardMenu style={{color: '#fff'}}>\n            <IconButton name=\"share\" />\n          </CardMenu>\n        </Card>\n      )\n    }\n   }\n\n  render() {\n    return(\n      <div className=\"category-tabs\">\n        {/* tabId = where the user clicks on the first, second or third tab (onChange)*/}\n        <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({activeTab: tabId })} ripple>\n        <Tab>React</Tab>\n        <Tab>Rails</Tab>\n        <Tab>Wechat Mini-Programs</Tab>\n        </Tabs>\n        <section className=\"projects-grid\">\n          <Grid className=\"projects-grid\">\n            <Cell col={12}>\n              {/* categories are displayed based on the toggleCategories above. If statements mean categories are rendered based on what the user clicks on (onChange above sets this by changing the tabId) */}\n              <div className=\"content\"> {this.toggleCategories()}</div>\n            </Cell>\n          </Grid>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Education extends Component {\n  render() {\n    return(\n      <Grid>\n        <Cell col={4}>\n        {/* render start year and end year if end year == true */}\n          {this.props.endYear ? <p style={{marginBottom: '0px'}}>{this.props.startYear} - {this.props.endYear} </p> : <p style={{marginBottom: '0px'}}>{this.props.startYear}</p>}\n        </Cell>\n        <Cell col={8}>\n          <h4 style={{marginTop:'0px'}}>{this.props.schoolName}</h4>\n          <p>{this.props.schoolDescription}</p>\n          <p>{this.props.grade}</p>\n        </Cell>\n      </Grid>\n    )\n  }\n}\n\nexport default Education;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass Experience extends Component {\n  render() {\n    return(\n      <Grid>\n        <Cell col={4}>\n         {this.props.endYear ? <p style={{marginBottom: '0px'}}>{this.props.startYear} - {this.props.endYear} </p> : <p style={{marginBottom: '0px'}}>{this.props.startYear}</p>}\n        </Cell>\n        <Cell col={8}>\n          <h4 style={{margin:'0px'}}>{this.props.companyName}</h4>\n          <h6 style={{marginTop: '5px'}}>{this.props.jobTitle}</h6>\n          <p>{this.props.jobDescription}</p>\n          {this.props.achievement1 ? <p>Achievements during this time include:</p> : null}\n          <ul>\n            {this.props.achievement1 ? <li> {this.props.achievement1} </li> : null}\n            {this.props.achievement2 ? <li> {this.props.achievement2} </li> : null}\n            {this.props.achievement3 ? <li> {this.props.achievement3} </li> : null}\n            {this.props.achievement4 ? <li> {this.props.achievement4} </li> : null}\n            {this.props.achievement5 ? <li> {this.props.achievement5} </li> : null}\n          </ul>\n        </Cell>\n      </Grid>\n    )\n  }\n}\n\nexport default Experience;\n","import React, { Component } from 'react';\nimport { Grid, Cell, ProgressBar } from 'react-mdl';\n\nclass Skills extends Component {\n  render() {\n    return(\n      <Grid>\n        <Cell col={12}>\n          <div style={{display: 'flex'}}>\n          <p style={{width: '50px'}}>{this.props.skill}</p> <ProgressBar style={{margin: 'auto', width: '75%', marginLeft: '40px'}} progress={this.props.progress} /> </div>\n        </Cell>\n      </Grid>\n    )\n  }\n}\n\nexport default Skills;\n","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\nimport Education from './education';\nimport Experience from './experience';\nimport Skills from './skills';\n\n\nclass Resume extends Component {\n  render() {\n    return(\n      <div>\n        <Grid>\n          <Cell col={5} tablet={12} phone={12}>\n            <div style={{textAlign: 'center'}}>\n              <img\n                src=\"https://cdn0.iconfinder.com/data/icons/user-pictures/100/supportmale-2-512.png\"\n                alt=\"avatar\"\n                style={{height: '200px', borderRadius: '5px', paddingTop: '40px', }}\n                 />\n            </div>\n\n            <h2>Tom Hill</h2>\n            <h4 style={{color: 'grey'}}>Programmer</h4>\n            <hr style={{borderTop: '3px solid #833fb2', width: '50%'}}/>\n            <p>I am an experienced business professional, seeking a transition into programming. I recently completed the Le Wagon fullstack 9-week coding bootcamp. I learnt HTML, CSS, Bootstrap, JavaScript ES2015, SQL, git, GitHub, Heroku and Ruby on Rails. Designed, implemented and shipped to production a clone of AirBnB and a Rails prototype of a WeChat mini-program called Rent a Jedi. My GitHub profile is <a href=\"https://github.com/tomhill991\">here</a></p>\n            <br></br>\n            <p>I am looking for a role as a Rails & React developer.</p>\n            <hr style={{borderTop: '3px solid #833fb2', width: '50%'}}/>\n            <h5>Address</h5>\n            <p>Shanghai, China</p>\n            <h5>Phone</h5>\n            <p>+86 1861 404 5076</p>\n            <h5>Email</h5>\n            <p>tom.hill991@gmail.com</p>\n            <h5>Website</h5>\n            <p>tomhill.tech</p>\n            <hr style={{borderTop: '3px solid #833fb2', width: '50%'}}/>\n          </Cell>\n          <Cell className=\"resume-right-col\" tablet={9} phone={12} col={7}>\n            <h2 style={{paddingLeft: '12px'}}>Education</h2>\n\n          {/* education is rendered based on './education.js' */}\n            <Education\n              startYear={2019}\n              endYear={2019}\n              schoolName=\"Le Wagon 9-Week Fullstack Bootcamp Batch #333\"\n              schoolDescription=\"\n              9-week intensive coding bootcamp learning HTML, CSS, Bootstrap, JavaScript ES2015, SQL, git, GitHub, Heroku and Ruby on Rails. Designed, implemented and shipped to production a clone of AirBnB and a Rails prototype of a WeChat mini-program called Rent a Jedi. I was the lead-developer for my group project, Plantopia - a WeChat mini-program to help users to maintain their house plants.\"\n               />\n\n               <Education\n                 startYear={2009}\n                 endYear={2013}\n                 schoolName=\"Keele University\"\n                 grade=\"Grade: 2;1\"\n                 schoolDescription=\"BA Business Management and HR.\"\n               />\n                <Education\n                 startYear={2017}\n                 schoolName=\"Cambridge University\"\n                 schoolDescription=\"CELTA\"\n                 grade=\"Grade: Pass A (Top 5%)\"\n               />\n                <hr style={{borderTop: '3px solid #e22947'}} />\n\n              <h2 style={{paddingLeft: '12px'}}>Experience</h2>\n\n            {/* experience is rendered based on './experience.js' */}\n            <Experience\n              startYear={2019}\n              companyName=\"Plantopia\"\n              jobTitle=\"Lead Developer - Le Wagon (Project Weeks)\"\n              jobDescription=\"Plantopia is a WeChat mini-program. Its main functionality is to scan any plant and retrieve information on it (such as watering schedule, soil preferences etc.) through an API so users can better maintain their plant. Another function is that the plant sends reminders to the user on watering frequency and a conversation happens between the plant and the user in a chatroom. I conceptualised the chatroom functionality and created it. I also created the API for the users own plants using Rails.\"\n            />\n\n             <Experience\n              startYear={2019}\n              companyName=\"Hacker News Clone\"\n              jobTitle=\"Fullstack - React & Rails\"\n              jobDescription=\"The frontend has an upvote and downvote functionality and the ability for a user to submit a news piece. To create this, I learned React on my own whilst on the Bootcamp (which didn’t cover React). I also created an API using Rails that stores articles on a backend and is called from the frontend.\"\n            />\n\n            <Experience\n              startYear={2016}\n              endYear={2019}\n              companyName=\"Language Link\"\n              jobTitle=\"Director of Business Development, HR Director, Head of Recruitment\"\n              jobDescription=\"I drove the sales and marketing for the rebirth of Language Link’s flagship school in Beijing. I also recruited all foreign teachers and management. Duties included: sourcing new revenue streams negotiating with customers and stakeholders, screening candidates, coordinating with internal and external stakeholders, posting job advertisements, negotiating with candidates and internal stakeholders, inducting and onboarding new staff, drafting contracts, and advising on, and dealing with, employee relations issues.\"\n              achievement1=\"sourced new revenue streams such as; partnerships for a summer camp, investors for rebirth of school, partnerships with local businesses.\"\n              achievement2=\"recruited 75% more students for relaunch of school.\"\n              achievement3=\"collaborated with upper-management team to successfully relaunch flagship school.\"\n              achievement4=\"created a detailed on boarding system for new candidates. This included: a visa process checklist, templates and documentation for visa officers to obtain a new hire’s visa; interview protocols and templates, job descriptions, job advert and contract templates, and pay scales for teachers.\"\n              achievement5=\"recruited a full teaching and upper-management team.\"\n              />\n\n              <Experience\n                startYear={2014}\n                endYear={2015}\n                companyName=\"Thomson Reuters\"\n                jobTitle=\"HR Administrator, HR Assistant\"\n                jobDescription=\"I worked in the HR department of Thomson Reuters UK & Ireland. Duties included: assisting and advising managers in employee relations disputes, onboarding new employees (from offer to induction), drafting and amending contracts, updating and amending employee information in Workday (the HR management system), coordinating with HR teams across time zones and in other divisions, answering and resolving queries on benefits and contractual obligations.\"\n                achievement1=\"discussed and implemented broad HR policy changes across the UK & Ireland divisions, which had approximately 5000 employees. This involved extensive collaboration with internal stakeholders.\"\n                achievement2=\"being offered a permanent contract, following an initial 3-month FTC.\"\n                />\n\n              <Experience\n                startYear={2013}\n                companyName=\"Argo International\"\n                jobTitle=\"HR Administrative Assistant - FTC\"\n                jobDescription=\"I assisted Argo International in upgrading their HR Management system.\"\n                achievement1=\"successfully migrated all employee information (over 300 employees) from the legacy HR system to the newer system.\"\n                achievement2=\"Argo extended my FTC.\"\n                />\n\n              <hr style={{borderTop: '3px solid #e22947'}} />\n              <h2 style={{paddingLeft: '12px'}}>Skills</h2>\n\n              <Skills\n                skill=\"Javascript\"\n                progress={100}\n                />\n              <Skills\n                skill=\"Rails\"\n                progress={100}\n              />\n              <Skills\n                skill=\"React\"\n                progress={85}\n              />\n              <Skills\n                skill=\"HTML/CSS\"\n                progress={80}\n              />\n              <Skills\n                skill=\"NodeJS\"\n                progress={20}\n              />\n\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default Resume;\n","import React from 'react';\nimport LandingPage from './landingpage';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\nimport { Switch, Route } from 'react-router-dom';\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={LandingPage} />\n    <Route path=\"/contact\" component={Contact} />\n    <Route path=\"/projects\" component={Projects} />\n    <Route path=\"/resume\" component={Resume} />\n  </Switch>\n)\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\nimport { Link } from 'react-router-dom';\nimport Main from './components/main'\n\nfunction App() {\n  return (\n   <div className=\"demo-big-content\">\n {/* links are from react-router-dom and Navigation is from react-mdl*/}\n    <Layout>\n        <Header className=\"header-color\" title=\"MY PORTFOLIO\" scroll>\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Header>\n        <Drawer title=\"MY PORTFOLIO\">\n            <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/resume\">Resume</Link>\n                <Link to=\"/projects\">Projects</Link>\n                <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n        </Drawer>\n        <Content>\n            <div className=\"page-content\" />\n            <Main/>\n        </Content>\n    </Layout>\n</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}